//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.03.19 at 07:02:40 PM IST 
//


package com.fullerton.olp.wsdao.crmnext.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for LoginStatus.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="LoginStatus"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="LoggedIn"/&gt;
 *     &lt;enumeration value="NotLoggedIn"/&gt;
 *     &lt;enumeration value="WrongPassword"/&gt;
 *     &lt;enumeration value="InvalidLoginName"/&gt;
 *     &lt;enumeration value="UserDoesNotExists"/&gt;
 *     &lt;enumeration value="AccountSuspended"/&gt;
 *     &lt;enumeration value="InternalError"/&gt;
 *     &lt;enumeration value="ChangePasswordRequired"/&gt;
 *     &lt;enumeration value="CertificateLoginNotAllowed"/&gt;
 *     &lt;enumeration value="CertificateMisMatch"/&gt;
 *     &lt;enumeration value="CertificateDoesNotExists"/&gt;
 *     &lt;enumeration value="SsoUserNeedsAuthentication"/&gt;
 *     &lt;enumeration value="SsoUserDoesNotExists"/&gt;
 *     &lt;enumeration value="LastLoginAttempt"/&gt;
 *     &lt;enumeration value="UserInactive"/&gt;
 *     &lt;enumeration value="DisableLoginAccess"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "LoginStatus")
@XmlEnum
public enum LoginStatus {

    @XmlEnumValue("LoggedIn")
    LOGGED_IN("LoggedIn"),
    @XmlEnumValue("NotLoggedIn")
    NOT_LOGGED_IN("NotLoggedIn"),
    @XmlEnumValue("WrongPassword")
    WRONG_PASSWORD("WrongPassword"),
    @XmlEnumValue("InvalidLoginName")
    INVALID_LOGIN_NAME("InvalidLoginName"),
    @XmlEnumValue("UserDoesNotExists")
    USER_DOES_NOT_EXISTS("UserDoesNotExists"),
    @XmlEnumValue("AccountSuspended")
    ACCOUNT_SUSPENDED("AccountSuspended"),
    @XmlEnumValue("InternalError")
    INTERNAL_ERROR("InternalError"),
    @XmlEnumValue("ChangePasswordRequired")
    CHANGE_PASSWORD_REQUIRED("ChangePasswordRequired"),
    @XmlEnumValue("CertificateLoginNotAllowed")
    CERTIFICATE_LOGIN_NOT_ALLOWED("CertificateLoginNotAllowed"),
    @XmlEnumValue("CertificateMisMatch")
    CERTIFICATE_MIS_MATCH("CertificateMisMatch"),
    @XmlEnumValue("CertificateDoesNotExists")
    CERTIFICATE_DOES_NOT_EXISTS("CertificateDoesNotExists"),
    @XmlEnumValue("SsoUserNeedsAuthentication")
    SSO_USER_NEEDS_AUTHENTICATION("SsoUserNeedsAuthentication"),
    @XmlEnumValue("SsoUserDoesNotExists")
    SSO_USER_DOES_NOT_EXISTS("SsoUserDoesNotExists"),
    @XmlEnumValue("LastLoginAttempt")
    LAST_LOGIN_ATTEMPT("LastLoginAttempt"),
    @XmlEnumValue("UserInactive")
    USER_INACTIVE("UserInactive"),
    @XmlEnumValue("DisableLoginAccess")
    DISABLE_LOGIN_ACCESS("DisableLoginAccess");
    private final String value;

    LoginStatus(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LoginStatus fromValue(String v) {
        for (LoginStatus c: LoginStatus.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
