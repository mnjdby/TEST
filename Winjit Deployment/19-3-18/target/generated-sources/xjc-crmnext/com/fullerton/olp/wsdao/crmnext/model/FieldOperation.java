//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.04.13 at 04:35:28 PM IST 
//


package com.fullerton.olp.wsdao.crmnext.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for FieldOperation.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="FieldOperation"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="None"/&gt;
 *     &lt;enumeration value="Equal"/&gt;
 *     &lt;enumeration value="Greater"/&gt;
 *     &lt;enumeration value="Lesser"/&gt;
 *     &lt;enumeration value="NotEqual"/&gt;
 *     &lt;enumeration value="GreaterEqual"/&gt;
 *     &lt;enumeration value="LesserEqual"/&gt;
 *     &lt;enumeration value="Like"/&gt;
 *     &lt;enumeration value="StartWith"/&gt;
 *     &lt;enumeration value="In"/&gt;
 *     &lt;enumeration value="NotIn"/&gt;
 *     &lt;enumeration value="LikeAnd"/&gt;
 *     &lt;enumeration value="SameAsItemValue"/&gt;
 *     &lt;enumeration value="NotSameAsItemValue"/&gt;
 *     &lt;enumeration value="IsSpecified"/&gt;
 *     &lt;enumeration value="IsNotSpecified"/&gt;
 *     &lt;enumeration value="LikeAsItemValue"/&gt;
 *     &lt;enumeration value="Expression"/&gt;
 *     &lt;enumeration value="AnyOf"/&gt;
 *     &lt;enumeration value="Contains"/&gt;
 *     &lt;enumeration value="EqualOrNotSpecified"/&gt;
 *     &lt;enumeration value="Between"/&gt;
 *     &lt;enumeration value="HasChanged"/&gt;
 *     &lt;enumeration value="HasNotChanged"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "FieldOperation")
@XmlEnum
public enum FieldOperation {

    @XmlEnumValue("None")
    NONE("None"),
    @XmlEnumValue("Equal")
    EQUAL("Equal"),
    @XmlEnumValue("Greater")
    GREATER("Greater"),
    @XmlEnumValue("Lesser")
    LESSER("Lesser"),
    @XmlEnumValue("NotEqual")
    NOT_EQUAL("NotEqual"),
    @XmlEnumValue("GreaterEqual")
    GREATER_EQUAL("GreaterEqual"),
    @XmlEnumValue("LesserEqual")
    LESSER_EQUAL("LesserEqual"),
    @XmlEnumValue("Like")
    LIKE("Like"),
    @XmlEnumValue("StartWith")
    START_WITH("StartWith"),
    @XmlEnumValue("In")
    IN("In"),
    @XmlEnumValue("NotIn")
    NOT_IN("NotIn"),
    @XmlEnumValue("LikeAnd")
    LIKE_AND("LikeAnd"),
    @XmlEnumValue("SameAsItemValue")
    SAME_AS_ITEM_VALUE("SameAsItemValue"),
    @XmlEnumValue("NotSameAsItemValue")
    NOT_SAME_AS_ITEM_VALUE("NotSameAsItemValue"),
    @XmlEnumValue("IsSpecified")
    IS_SPECIFIED("IsSpecified"),
    @XmlEnumValue("IsNotSpecified")
    IS_NOT_SPECIFIED("IsNotSpecified"),
    @XmlEnumValue("LikeAsItemValue")
    LIKE_AS_ITEM_VALUE("LikeAsItemValue"),
    @XmlEnumValue("Expression")
    EXPRESSION("Expression"),
    @XmlEnumValue("AnyOf")
    ANY_OF("AnyOf"),
    @XmlEnumValue("Contains")
    CONTAINS("Contains"),
    @XmlEnumValue("EqualOrNotSpecified")
    EQUAL_OR_NOT_SPECIFIED("EqualOrNotSpecified"),
    @XmlEnumValue("Between")
    BETWEEN("Between"),
    @XmlEnumValue("HasChanged")
    HAS_CHANGED("HasChanged"),
    @XmlEnumValue("HasNotChanged")
    HAS_NOT_CHANGED("HasNotChanged");
    private final String value;

    FieldOperation(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static FieldOperation fromValue(String v) {
        for (FieldOperation c: FieldOperation.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
